#include <stdio.h>
#include<stdlib.h>
struct stack{
    int size;
    int top;
    int*arr;
};
int isempty(struct stack*ptr){
    if(ptr->top==-1)
    return 1;
    else
    return 0;
}
int isfull(struct stack*ptr){
    if(ptr->top==ptr->size-1)
    return 1;
    else
    return 0;
}
void push(struct stack*ptr,int val){
    if(isfull(ptr))
    printf("stack overflow cannot push the elemen %d in stack\n",val);
    
    else{
    ptr->top++;
    ptr->arr[ptr->top]=val;}
}

int pop(struct stack*ptr){
    if(isempty(ptr)){
    printf("stack underflow cannot push the elemen  in stack\n");
    return -1;}
    else{
  
   int val= ptr->arr[ptr->top];
   ptr->top--;
   return 0;
}}


int main()
{struct stack*sp=(struct stack*)malloc(sizeof(struct stack));//creating a stack like bucket and storing adddesing memory in heap;
    sp->size=80;
    sp->top=-1;
    sp->arr=(int*)malloc(sizeof (sp->size )*sizeof( int));//creaiting an array which will hold the inputs and addressing it in heap;
    printf("The struct is created sucessfully\n");
   printf("%d",isempty(sp));
    printf("%d",isfull(sp));
    push(sp,78);
    push(sp,87);  return 0;}
